<?xml version="1.0" encoding="utf-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:context="http://www.springframework.org/schema/context"
        xmlns:aop="http://www.springframework.org/schema/aop"
        xmlns:tx="http://www.springframework.org/schema/tx"
        xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd">
  
    <!-- 使用JDBC配置连接池 -->
<!--    <bean id="datasource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">   -->
<!--         <property name="driverClassName" value="com.mysql.jdbc.Driver" />   -->
        <!--注意一下&characterEncoding要修改为&amp;characterEncoding-->  
<!--     <property name="url" value="jdbc:mysql://localhost:3306/ssh?useUnicode=true&amp;characterEncoding=utf-8"/>         -->
<!--         <property name="username" value="root"/>   -->
<!--         <property name="password" value="123456" />   -->
<!--     </bean>          -->
  <!-- 引入外部的属性文件 -->
   <context:property-placeholder location="classpath:jdbc.properties"/> 
<!-- 使用c3p0配置连接池 -->
		<bean id="datasource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
			<property name="driverClass" value="${jdbc.driverClass}"></property>
			<property name="jdbcUrl" value="${jdbc.url}"></property>
			<property name="user"  value="${jdbc.username}"></property>
			<property name="password"  value="${jdbc.password}"></property>
		</bean>
		
	<!-- 配置Hibernate的相关属性 -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<!-- 注入连接池 -->
		<property name="dataSource" ref="datasource"></property>
		<!-- 配置Hibernate的属性 -->
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				
			</props>
		</property>
		<!-- 加载Hibernate中的映射文件 -->
		<property name="mappingResources">
			<list>
				<value>com/pyh/employee/domain/Department.hbm.xml</value>
				<value>com/pyh/employee/domain/Employee.hbm.xml</value>
			</list>
		</property>
	</bean>
    <!-- 配置Action的类 -->
    <bean id="emploeyAction" class="com.pyh.employee.action.EmployeeAction" scope="prototype">
    	 <property name="employeeService" ref="employeeService"></property>
    	 <property name="departmentService" ref="departmentService"></property>
    </bean>
    <bean id="departmentAction" class="com.pyh.employee.action.DepartmentAction" scope="prototype">
    	<property name="departmentService" ref="departmentService"></property>
    </bean>
	<!-- 配置业务层的类 -->
	<bean id="employeeService" class="com.pyh.employee.service.impl.EmployeeServiceImpl">
		<property name="employeeDao" ref="employeeDao"></property>
	</bean>
	<bean id="departmentService" class="com.pyh.employee.service.impl.DepartmentServiceImpl">
		<property name="departmentDao" ref="departmentDao"></property>
	</bean>
	
	<!-- 配置DAO的类 -->
	<bean id="employeeDao" class="com.pyh.employee.Dao.impl.EmployeeDaoImpl">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<bean id="departmentDao" class="com.pyh.employee.Dao.impl.DepartmentDaoImpl">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<!-- 配置事务管理器 -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<!-- 开启注解事务 -->
	<tx:annotation-driven transaction-manager="transactionManager"/>
</beans>